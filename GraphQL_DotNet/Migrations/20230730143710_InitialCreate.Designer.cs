// <auto-generated />
using System;
using GraphQL_DotNet.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraphQL_DotNet.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230730143710_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GraphQL_DotNet.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ce1c4ed-0aaa-4ed8-9a99-74a7511b65f8"),
                            Description = "Cash account for our users",
                            OwnerId = new Guid("eea81bc8-eec1-468b-8f01-03b4609c5681"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("83f512b2-6a93-4c75-a190-44a4b8c46682"),
                            Description = "Saving accounts for our users",
                            OwnerId = new Guid("1de01935-ea4f-46da-b298-132d33aa08cc"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("856bd47c-a189-494f-a672-87b28374c21a"),
                            Description = "Income account for our users",
                            OwnerId = new Guid("1de01935-ea4f-46da-b298-132d33aa08cc"),
                            Type = 3
                        });
                });

            modelBuilder.Entity("GraphQL_DotNet.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eea81bc8-eec1-468b-8f01-03b4609c5681"),
                            Address = "John Doe's Address",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("1de01935-ea4f-46da-b298-132d33aa08cc"),
                            Address = "Jane Doe's Address",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("GraphQL_DotNet.Entities.Account", b =>
                {
                    b.HasOne("GraphQL_DotNet.Entities.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("GraphQL_DotNet.Entities.Owner", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
